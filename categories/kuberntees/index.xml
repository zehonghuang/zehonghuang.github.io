<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kuberntees on 维修区刷紫</title><link>/categories/kuberntees/</link><description>Recent content in Kuberntees on 维修区刷紫</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>© 2025 黄泽宏 | &lt;a href="https://beian.miit.gov.cn/" target="_blank">粤ICP备2025417888号-1&lt;/a></copyright><lastBuildDate>Thu, 07 Jul 2022 14:06:14 +0800</lastBuildDate><atom:link href="/categories/kuberntees/index.xml" rel="self" type="application/rss+xml"/><item><title>【问题小解决】提供一个直接进入Pod网络命名空间的Shell脚本</title><link>/%E9%97%AE%E9%A2%98%E5%B0%8F%E8%A7%A3%E5%86%B3%E6%8F%90%E4%BE%9B%E4%B8%80%E4%B8%AA%E7%9B%B4%E6%8E%A5%E8%BF%9B%E5%85%A5pod%E7%BD%91%E7%BB%9C%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E7%9A%84shell%E8%84%9A%E6%9C%AC/</link><pubDate>Thu, 07 Jul 2022 14:06:14 +0800</pubDate><guid>/%E9%97%AE%E9%A2%98%E5%B0%8F%E8%A7%A3%E5%86%B3%E6%8F%90%E4%BE%9B%E4%B8%80%E4%B8%AA%E7%9B%B4%E6%8E%A5%E8%BF%9B%E5%85%A5pod%E7%BD%91%E7%BB%9C%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E7%9A%84shell%E8%84%9A%E6%9C%AC/</guid><description>我们使用 Kubernetes 时难免发生一些网络问题，往往需要进入容器的网络命名空间 (netns) 中，进行一些网络调试来定位问题，这里直接提供一个脚本，申请各种步骤
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #!/bin/bash # 函数：进入网络命名空间并进行调试 enter_netns() { local pod_name=$1 local namespace=$2 local container_name=$3 # 获取指定 Pod 中指定容器的容器 ID container_id=$(kubectl -n $namespace get pod $pod_name -o jsonpath=&amp;#34;{.status.containerStatuses[?(@.name==\&amp;#34;$container_name\&amp;#34;)].containerID}&amp;#34; | sed &amp;#39;s|containerd://||&amp;#39;) if [ -z &amp;#34;$container_id&amp;#34; ]; then echo &amp;#34;未找到 Pod $pod_name 中容器 $container_name 在命名空间 $namespace 中的容器 ID&amp;#34; exit 1 fi # 获取容器进程的 PID pid=$(crictl inspect $container_id | grep -i &amp;#39;&amp;#34;pid&amp;#34;&amp;#39; | head -n 1 | awk &amp;#39;{print $2}&amp;#39; | sed &amp;#39;s/,//&amp;#39;) if [ -z &amp;#34;$pid&amp;#34; ]; then echo &amp;#34;未找到容器 $container_id 的 PID&amp;#34; exit 1 fi # 进入容器的网络命名空间 echo &amp;#34;进入 Pod $pod_name 中容器 $container_name 的网络命名空间，PID 为 $pid&amp;#34; nsenter -n --target $pid } # 检查是否提供了必要的参数 if [ $# -ne 3 ]; then echo &amp;#34;用法: $0 &amp;lt;pod_name&amp;gt; &amp;lt;namespace&amp;gt; &amp;lt;container_name&amp;gt;&amp;#34; exit 1 fi # 调用函数进入网络命名空间 enter_netns $1 $2 $3 调试网络 成功进入容器的 netns，可以使用节点上的网络工具进行调试网络，可以首先使用ip a验证下 ip 地址是否为 pod ip:</description></item></channel></rss>